---
- hosts: localhost
  gather_facts: no
  vars:
    - heat_environment_file: "my-heat-params.yml"
  tasks:
    - name: Build a Heat stack for ansible-inventory
      register: heat_stack
      os_stack:
        name: "bastion-stack1"
        state: present
        template: "../files/bastion-heat-stack.yml"
        environment:
          - "{{ heat_environment_file }}"

- hosts: localhost
  gather_facts: no
  connection: local
  tasks:
    - name: Add nodes nodes to inventory
      add_host:
        name: "{{ item.name }}"
        groups: "{{ item.metadata.ansible_group }}"
        ansible_ssh_host: "{{ item.addresses[bastion_network_name][0].addr }}"
        ansible_ssh_user: "{{ vm_user_account }}"
      no_log: yes
      with_items:
        - "{{ heat_stack.stack.outputs[0].output_value }}"
        - "{{ heat_stack.stack.outputs[1].output_value }}"
      when: item.addresses[bastion_network_name]|length == 1

- hosts: localhost
  gather_facts: no
  connection: local
  tasks:
    - name: Add Bastion frontend node to inventory
      add_host:
        name: "{{ item.name }}"
        groups: "{{ item.metadata.ansible_group }}"
        ansible_ssh_host: "{{ item.addresses[bastion_network_name][1].addr }}"
        ansible_ssh_user: "{{ vm_user_account }}"
      no_log: yes
      with_items:
        - "{{ heat_stack.stack.outputs[0].output_value }}"
        - "{{ heat_stack.stack.outputs[1].output_value }}"
      when: item.addresses[bastion_network_name]|length == 2

- hosts: localhost
  gather_facts: no
  connection: local
  tasks:
    - name: Generate an inventory file
      template: src=templates/bastion_inventory.j2 dest=../ansible_inventory

- hosts: localhost
  gather_facts: no
  tasks:
    - name: Wait for the bastion node to become accessible
      wait_for:
        host: "{{ hostvars[groups['bastion'][0]]['ansible_ssh_host'] }}"
        port: 22
        state: started

- hosts: ansible_nodes
  gather_facts: no
  tasks:
    - name: Wait for the nodes to become accessible
      wait_for:
        host: "{{ ansible_ssh_host }}"
        port: 22
        state: started
      delegate_to: bastion_node

- hosts: bastion
  gather_facts: yes
  tags: dns
  user: cloud-user
  become: yes
  vars:
    - hosts_ip_source: "template"
    - hosts_file_to_populate: /etc/hosts
    - ipaddress_source_var: ansible_ssh_host
  roles: 
    - ansible-role-hosts-inventory
